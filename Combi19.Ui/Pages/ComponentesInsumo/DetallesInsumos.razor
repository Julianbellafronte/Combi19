@page "/añadirInsumo"
@page "/editarInsumo/{id:int}"
@inject IServicioInsumo servicioInsumo
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin")]

<div tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1>Datos de insumo</h1>
            </div>
            <div class="modal-body">
                <EditForm Model="@insumo" OnValidSubmit="Guardar">
                    <DataAnnotationsValidator />
                    <table class="table">
                        <tr>
                            <td>Nombre</td>
                            <td><input type="text" @bind="insumo.Nombre" /></td>
                            <td colspan="2"> <ValidationMessage For="@( () => insumo.Nombre)" /></td>
                        </tr>
                        <tr>
                            <td>Codigo</td>
                            <td><input type="text" @bind="insumo.Codigo" /><h6 style="color:red">@Message</h6></td>
                            <td colspan="2"> <ValidationMessage For="@( () => insumo.Codigo)" /></td>
                        </tr>
                        <tr>
                            <td>Descripcion</td>
                            <td><input type="text" @bind="insumo.Descripcion" /></td>
                            <td colspan="2"> <ValidationMessage For="@( () => insumo.Descripcion)" /></td>
                        </tr>
                        <tr>
                            <td>Precio</td>
                            <td><input type="number" step="0.01" @bind="insumo.Precio" /></td>
                            <td colspan="2"> <ValidationMessage For="@( () => insumo.Precio)" /></td>
                        </tr>
                        <tr>
                            <td colspan="2" style="text-align:center">
                                <button type="submit" class="btn btn-outline-primary" value="Guardar">Guardar</button>
                                <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button>
                            </td>
                        </tr>
                    </table>
                </EditForm>
                <div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int id { get; set; }

    Insumo insumo = new Insumo();
    IEnumerable<Insumo> insumos = new List<Insumo>();
    string aux = "";
    string Message;

    protected async override Task OnInitializedAsync()
    {
        insumos = await servicioInsumo.ObtenerTodos();
        if (id > 0) //If no Id has been passed, then it is a new Category
        {
            insumo = await servicioInsumo.Obtener(id);
            aux = insumo.Codigo;
        }
    }

    public async Task<bool> existe(string cod)
    {
        Insumo ins = await servicioInsumo.Existe(cod);
        return ins != null;
    }

    public async Task Guardar()
    {
        bool ok = await existe(insumo.Codigo.ToUpper());
        if (aux.ToUpper() == insumo.Codigo.ToUpper() || !ok)
        {
            insumo.Codigo = insumo.Codigo.ToUpper();
            await servicioInsumo.Guardar(insumo);
            if (insumo.Id == 0)
                navigationManager.NavigateTo("/insumos");
            else
                navigationManager.NavigateTo($"/perfilInsumo/{insumo.Id}");
        }
        else
        {
            Message = "El insumo ya se encuentra registrado";
            navigationManager.NavigateTo($"/editarInsumo/{id}");
        }
    }

    public void Cancelar()
    {
        navigationManager.NavigateTo("/insumos");
    }
}


