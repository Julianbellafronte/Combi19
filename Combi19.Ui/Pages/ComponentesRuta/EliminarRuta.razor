@page "/eliminarRuta/{id:int}"
@inject IServicioRuta servicioRuta
@inject IServicioCiudad servicioCiudad
@inject IServicioProvincia servicioProvincia
@inject IServicioViaje servicioViaje
@inject NavigationManager  navigationManager
@attribute [Authorize(Roles = "Admin")]

<div tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1>Datos de la Ruta</h1>
            </div>
            <div class="modal-body">
                <EditForm Model="@ruta" OnValidSubmit="Eliminar">
                    <DataAnnotationsValidator />
                    <table class="table">
                        <tr>
                            <td>Origen</td>
                            <td>@ciudad1</td>
                        </tr>
                        <tr>
                            <td>Destino</td>
                            <td>@ciudad2</td>
                        </tr>
                        <tr>
                            <td>Distancia</td>
                            <td>@ruta.Km</td>
                        </tr>
                        <tr>
                            <td>Hora salida</td>
                            <td>@ruta.HsSalida.ToString("HH:mm")</td>
                        </tr>
                        @if (!tieneViaje())
                        {
                            <tr>
                                <td colspan="2" style="text-align:center">
                                    <button type="submit" class="btn btn-outline-danger" value="Eliminar">Eliminar</button>
                                    <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td colspan="2" style="text-align:center">
                                    <p style="color:red">No se puede eliminar la ruta. Tiene viajes asignados.</p>
                                    <button type="button" class="btn btn-outline-dark" @onclick="@( ()=> navigationManager.NavigateTo("/rutas"))">Volver</button>
                                </td>
                            </tr>
                        }
                    </table>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    public Ruta ruta = new Ruta();
    private IEnumerable<Ciudad> ciudades = new List<Ciudad>();
    private IEnumerable<Provincia> provincias = new List<Provincia>();
    private IEnumerable<Viaje> viajes = new List<Viaje>();
    string ciudad1, ciudad2;
    bool tiene = false;


    public string Message { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            ciudades = await servicioCiudad.ObtenerTodos();
            provincias = await servicioProvincia.ObtenerTodos();
            viajes = await servicioViaje.ObtenerTodos();
            ruta = await servicioRuta.Obtener(id);
            obtenerCiudadProvincia(ruta.IdCiudad1, ruta.IdCiudad2);
        }
        catch (Exception ex)
        {
            Message = "Algo salio mal... " + ex.Message;
        }
    }

    protected async Task Eliminar()
    {

        await servicioRuta.Eliminar(id);

        navigationManager.NavigateTo("/rutas");
    }
    public void Cancelar()
    {
        navigationManager.NavigateTo("/rutas");
    }

    protected bool tieneViaje()
    {
        foreach (Viaje viaje in viajes)
        {
            if (viaje.IdRuta == ruta.Id)
            {
                tiene = true;
                break;
            }
        }
        return tiene;
    }

    protected void obtenerCiudadProvincia(int id1, int id2)
    {
        foreach (Ciudad ciudad in ciudades)
        {
            if (ciudad.Id == id1)
            {
                ciudad1 = ciudad.Nombre;
                foreach (Provincia provincia in provincias)
                {
                    if (provincia.Id == ciudad.IdProvincia)
                    {
                        ciudad1 += ", " + provincia.Nombre;
                        break;
                    }
                }
            }
        }
        foreach (Ciudad ciudad in ciudades)
        {
            if (ciudad.Id == id2)
            {
                ciudad2 = ciudad.Nombre;
                foreach (Provincia provincia in provincias)
                {
                    if (provincia.Id == ciudad.IdProvincia)
                    {
                        ciudad2 += ", " + provincia.Nombre;
                        break;
                    }
                }
            }
        }

    }
}
