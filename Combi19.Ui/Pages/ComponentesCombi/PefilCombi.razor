@page "/perfilCombi/{id:int}"
@inject IServicioChofer servicioChofer
@inject IServicioCombi servicioCombi
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin")]

<h1>Combi @combi.Modelo @combi.Patente</h1>
<div class="modal-content">
    <table class="table">
        <tr>
            <td><b>Modelo:</b> @combi.Modelo</td>
        </tr>
        <tr>
            <td><b>Patente:</b> @combi.Patente</td>
        </tr>
        <tr>
            <td><b>Cantidad de Asientos:</b> @combi.Asientos</td>
        </tr>
        <tr>
            @if (combi.SuperComoda)
            {
                <td><b>Tipo:</b> SuperComoda</td>
            }
            else
            {
                <td><b>Tipo:</b> Comoda</td>
            }
        </tr>
        <tr>
            <td><b>Chofer:</b> @chofer.Nombre @chofer.Apellido </td>
        </tr>
        <tr>
            <td colspan="2" style="text-align:center">
                <button type="button" class="btn btn-outline-dark" @onclick="Volver">Volver</button>
            </td>
        </tr>
    </table>
</div>


@code {
    [Parameter]
    public int id { get; set; }

    Combi combi = new Combi();
    AspNetUsersDto chofer = new AspNetUsersDto();

    protected async override Task OnInitializedAsync()
    {
        if (id > 0) //If no Id has been passed, then it is a new Category
        {
            combi = await servicioCombi.Obtener(id);
            chofer = await servicioChofer.Obtener(combi.IdChofer);

        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/combis");
    }
}
