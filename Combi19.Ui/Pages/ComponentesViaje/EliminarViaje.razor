@page "/eliminarViaje/{id:int}"
@inject IServicioRuta servicioRuta
@inject IServicioCiudad servicioCiudad
@inject IServicioProvincia servicioProvincia
@inject IServicioViaje servicioViaje
@inject IServicioVenta servicioVenta
@inject NavigationManager  navigationManager
@attribute [Authorize(Roles = "Admin")]

<div tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1>Datos del Viaje</h1>
            </div>
            <div class="modal-body">
                <EditForm Model="@viaje" OnValidSubmit="Eliminar">
                    <DataAnnotationsValidator />
                    <table class="table">
                        <tr>
                            <td>Origen</td>
                            <td>@ciudad1.Nombre @tipoProvincia1.Nombre</td>
                        </tr>
                        <tr>
                            <td>Destino</td>
                            <td>@ciudad2.Nombre @tipoProvincia2.Nombre</td>
                        </tr>
                        <tr>
                            <td>Fecha de salida</td>
                            <td>@viaje.FechaSalida.ToString("dd/MM/yy")</td>
                        </tr>
                        <tr>
                            <td>Precio</td>
                            <td>$@viaje.Precio</td>
                        </tr>
                        @if (v != null)
                        {
                            <tr>
                                <td colspan="2" style="text-align:center">
                                    <button type="submit" class="btn btn-outline-danger" value="Eliminar">Eliminar</button>
                                    <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td colspan="2" style="text-align:center">
                                    <p style="color:red">No se puede eliminar el viaje. Tiene ventas asignadas.</p>
                                    <button type="button" class="btn btn-outline-dark" @onclick="@( ()=> navigationManager.NavigateTo("/viajes"))">Volver</button>
                                </td>
                            </tr>
                        }
                    </table>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    public Viaje viaje = new Viaje();
    public IEnumerable<Ruta> rutas = new List<Ruta>();
    private IEnumerable<Ciudad> ciudades = new List<Ciudad>();
    private IEnumerable<Provincia> provincias = new List<Provincia>();
    Ciudad ciudad1 = new Ciudad(), ciudad2 = new Ciudad();
    Ruta tipoRuta = new Ruta();
    Venta v;
    Provincia tipoProvincia1 = new Provincia(), tipoProvincia2 = new Provincia();

    public string Message { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            ciudades = await servicioCiudad.ObtenerTodos();
            provincias = await servicioProvincia.ObtenerTodos();
            rutas = await servicioRuta.ObtenerTodos();
            viaje = await servicioViaje.Obtener(id);
            v = await servicioVenta.VentaViaje(viaje.Id);
            obtenerCiudadProvincia(viaje.IdRuta);
        }
        catch (Exception ex)
        {
            Message = "Algo salio mal... " + ex.Message;
        }
    }

    protected async Task Eliminar()
    {

        await servicioViaje.Eliminar(id);
        navigationManager.NavigateTo("/viajes");

    }
    public void Cancelar()
    {
        navigationManager.NavigateTo("/viajes");
    }

    protected void obtenerCiudadProvincia(int v1)
    {
        foreach (Ruta ruta in rutas)
        {
            if (ruta.Id == v1)
            {
                tipoRuta = ruta;
                break;
            }
        }
        foreach (Ciudad ciudad in ciudades)
        {
            if (ciudad.Id == tipoRuta.IdCiudad1)
            {
                ciudad1 = ciudad;
                foreach (Provincia provincia in provincias)
                {
                    if (provincia.Id == ciudad.IdProvincia)
                    {
                        tipoProvincia1 = provincia;
                        break;
                    }
                }
            }
        }
        foreach (Ciudad ciudad in ciudades)
        {
            if (ciudad.Id == tipoRuta.IdCiudad2)
            {
                ciudad2 = ciudad;
                foreach (Provincia provincia in provincias)
                {
                    if (provincia.Id == ciudad.IdProvincia)
                    {
                        tipoProvincia2 = provincia;
                        break;
                    }
                }
            }
        }
    }


}
